@{
    ViewData["Title"] = "Dashboard";
}

<div class="text-center mb-4">
    <h1 class="hpReservationTitle">Réservation</h1>
</div>

<div class="text-center mb-5">
    <h2 class="display-4 text-muted">Your command center for the perfect dining room</h2>
</div>

<div class="calendarContainer">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="calendarTitle">
            <i></i>Booking Calendar
        </h1>
        <div class="d-flex gap-2 align-items-center">
            <button id="prev-btn" class="btn btn-outline-primary">
                <i class="fas fa-chevron-left"></i>
            </button>
            <button id="today-btn" class="btn btn-primary">Today</button>
            <button id="next-btn" class="btn btn-outline-primary">
                <i class="fas fa-chevron-right"></i>
            </button>
            <button id="add-booking-btn" class="btn btn-success ms-2">
                <i class="fas fa-plus me-2"></i>New Booking
            </button>
        </div>
    </div>

    <div class="view-options mb-4">
        <div class="btn-group" role="group">
            <button type="button" class="btn btn-outline-primary active" data-view="dayGridMonth">
                <i class="fas fa-calendar me-2"></i>Month
            </button>
            <button type="button" class="btn btn-outline-primary" data-view="timeGridWeek">
                <i class="fas fa-calendar-week me-2"></i>Week
            </button>
            <button type="button" class="btn btn-outline-primary" data-view="timeGridDay">
                <i class="fas fa-calendar-day me-2"></i>Day
            </button>
            <button type="button" class="btn btn-outline-primary" data-view="listWeek">
                <i class="fas fa-list me-2"></i>List
            </button>
        </div>
    </div>
    <h3 id="dynamicTitle" class="mb-0 calendar-title-display" style="color: #313131; font-family: fantasy;">
        <i class="fas fa-calendar-alt me-2" style="color: #C9575E;"></i>
        <span id="currentPeriod">Loading...</span>
    </h3>

    <div id="calendar" class="booking-calendar"></div>
</div>

<!-- JavaScript for rendering the calendar using the FullCalendar.io library (CDN in the _Layout.cshtml file) -->
@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var calendarEl = document.getElementById('calendar');
            var currentPeriodElement = document.getElementById('currentPeriod');

            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                allDaySlot: false,
                headerToolbar: false,
                height: 'auto',
                nowIndicator: true,
                slotMinTime: '16:00:00',
                slotMaxTime: '22:30:00',
                businessHours: {
                    daysOfWeek: [1, 2, 3, 4, 5, 6],
                    startTime: '16:00',
                    endTime: '22:30',
                },
                events: '/api/BookingApi',

                // Add these event handlers
                viewDidMount: function(arg) {
                    updateDynamicTitle(arg.view);
                },
                datesSet: function(arg) {
                    updateDynamicTitle(arg.view);
                },

                eventClick: function(info) {
                    showBookingDetails(info.event);
                },
                dateClick: function(info) {
                    openBookingModal(info.dateStr);
                }
            });

            calendar.render();

            // Function to update the dynamic title
            function updateDynamicTitle(view) {
                const viewType = view.type;
                let titleText = '';

                switch(viewType) {
                    case 'dayGridMonth':
                        const month = view.currentStart.toLocaleString('default', { month: 'long' });
                        const year = view.currentStart.getFullYear();
                        titleText = `${month} ${year}`;
                        break;

                    case 'timeGridWeek':
                        const weekStart = view.currentStart.toLocaleDateString('default', { month: 'short', day: 'numeric' });
                        const weekEnd = new Date(view.currentEnd.getTime() - 1).toLocaleDateString('default', { month: 'short', day: 'numeric' });
                        titleText = `Week: ${weekStart} - ${weekEnd}`;
                        break;

                    case 'timeGridDay':
                        const day = view.currentStart.toLocaleDateString('default', {
                            weekday: 'short',
                            month: 'short',
                            day: 'numeric',
                            year: 'numeric'
                        });
                        titleText = day;
                        break;

                    case 'listWeek':
                        titleText = 'Upcoming Bookings';
                        break;
                }

                currentPeriodElement.textContent = titleText;
            }

            // Initialize title on load
            updateDynamicTitle(calendar.view);

            // View buttons
            document.querySelectorAll('.view-options button').forEach(button => {
                button.addEventListener('click', function() {
                    // Remove active class from all buttons
                    document.querySelectorAll('.view-options button').forEach(btn => {
                        btn.classList.remove('active');
                    });
                    // Add active class to clicked button
                    this.classList.add('active');

                    calendar.changeView(this.dataset.view);
                });
            });

            // Set initial active view button
            document.querySelector('[data-view="dayGridMonth"]').classList.add('active');

            // Navigation buttons
            document.getElementById('prev-btn').addEventListener('click', function() {
                calendar.prev();
            });

            document.getElementById('next-btn').addEventListener('click', function() {
                calendar.next();
            });

            document.getElementById('today-btn').addEventListener('click', function() {
                calendar.today();
            });

            // New Booking button
            document.getElementById('add-booking-btn').addEventListener('click', function() {
                openBookingModal();
            });

            function openBookingModal(date) {
                window.location.href = '/Bookings/Create' + (date ? '?date=' + date : '');
            }

            function showBookingDetails(event) {
                alert('Booking Details:\n' +
                      'Customer: ' + (event.extendedProps.customerName || 'N/A') + '\n' +
                      'Phone: ' + (event.extendedProps.customerPhone || 'N/A') + '\n' +
                      'Guests: ' + (event.extendedProps.customerCount || 'N/A') + '\n' +
                      'Table: ' + (event.extendedProps.tableNumber || 'N/A'));
            }
        });
    </script>
}